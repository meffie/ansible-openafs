---
#
# Playbook to deploy an OpenAFS cell.
#
- name: Wait for guests to start
  hosts: afs_cell
  gather_facts: no
  tasks:
  - name: Wait for system to become reachable
    wait_for_connection:

- name: Create Kerberos realm
  hosts: afs_kdcs[0]
  become: yes
  any_errors_fatal: true
  roles:
    - openafs_krbserver
  tags:
    - kdc
    - krb5

- name: Install Kerberos clients
  hosts: afs_cell
  become: yes
  any_errors_fatal: true
  roles:
    - openafs_krbclient
  tags:
    - krb5

- name: Install OpenAFS servers
  hosts: afs_databases:afs_fileservers
  vars:
    afs_partitions:
      - a
      - b
  become: yes
  any_errors_fatal: true
  roles:
    - openafs_server
  tags:
    - server

- name: Install OpenAFS clients
  hosts: afs_clients
  become: yes
  any_errors_fatal: true
  roles:
    - openafs_client
  tags:
    - client

- name: Create cell volumes
  hosts: afs_clients[0]
  any_errors_fatal: true
  vars:
    afs_volumes:
      - name: test
  roles:
    - openafs_cell
  tags:
    - volume

- name: Install tests
  hosts: afs_robotest
  any_errors_fatal: true
  roles:
    - openafs_robotest
  tags:
    - test-setup

- name: Run tests
  hosts: afs_robotest[0]
  tags:
    - test
  tasks:
    - name: Run tests
      command:
        cmd: "/usr/bin/run-openafs-robotest.sh {{ afs_robotest_suite | d('tests') }}"
      failed_when: false
      register: test_results

    - debug:
        var: test_results
        verbosity: 1

    - debug:
        msg: |
          Test suite: {{ afs_robotest_suite | d('tests') }}
          Test results: {{ (test_results.rc == 0) | ternary('PASS', 'FAIL') }}
          Test report: http://{{ ansible_fqdn }}/~{{ ansible_user_id }}/openafs-robotest-output/
